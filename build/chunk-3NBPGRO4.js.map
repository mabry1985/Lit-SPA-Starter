{
  "version": 3,
  "sources": ["../build/_snowpack/pkg/@vaadin/router.js", "../build/dist/router.js"],
  "sourcesContent": ["function toArray(objectOrArray) {\n  objectOrArray = objectOrArray || [];\n  return Array.isArray(objectOrArray) ? objectOrArray : [objectOrArray];\n}\n\nfunction log(msg) {\n  return `[Vaadin.Router] ${msg}`;\n}\n\nfunction logValue(value) {\n  if (typeof value !== 'object') {\n    return String(value);\n  }\n\n  const stringType = Object.prototype.toString.call(value).match(/ (.*)\\]$/)[1];\n\n  if (stringType === 'Object' || stringType === 'Array') {\n    return `${stringType} ${JSON.stringify(value)}`;\n  } else {\n    return stringType;\n  }\n}\n\nconst MODULE = 'module';\nconst NOMODULE = 'nomodule';\nconst bundleKeys = [MODULE, NOMODULE];\n\nfunction ensureBundle(src) {\n  if (!src.match(/.+\\.[m]?js$/)) {\n    throw new Error(log(`Unsupported type for bundle \"${src}\": .js or .mjs expected.`));\n  }\n}\n\nfunction ensureRoute(route) {\n  if (!route || !isString(route.path)) {\n    throw new Error(log(`Expected route config to be an object with a \"path\" string property, or an array of such objects`));\n  }\n\n  const bundle = route.bundle;\n  const stringKeys = ['component', 'redirect', 'bundle'];\n\n  if (!isFunction(route.action) && !Array.isArray(route.children) && !isFunction(route.children) && !isObject(bundle) && !stringKeys.some(key => isString(route[key]))) {\n    throw new Error(log(`Expected route config \"${route.path}\" to include either \"${stringKeys.join('\", \"')}\" ` + `or \"action\" function but none found.`));\n  }\n\n  if (bundle) {\n    if (isString(bundle)) {\n      ensureBundle(bundle);\n    } else if (!bundleKeys.some(key => key in bundle)) {\n      throw new Error(log('Expected route bundle to include either \"' + NOMODULE + '\" or \"' + MODULE + '\" keys, or both'));\n    } else {\n      bundleKeys.forEach(key => key in bundle && ensureBundle(bundle[key]));\n    }\n  }\n\n  if (route.redirect) {\n    ['bundle', 'component'].forEach(overriddenProp => {\n      if (overriddenProp in route) {\n        console.warn(log(`Route config \"${route.path}\" has both \"redirect\" and \"${overriddenProp}\" properties, ` + `and \"redirect\" will always override the latter. Did you mean to only use \"${overriddenProp}\"?`));\n      }\n    });\n  }\n}\n\nfunction ensureRoutes(routes) {\n  toArray(routes).forEach(route => ensureRoute(route));\n}\n\nfunction loadScript(src, key) {\n  let script = document.head.querySelector('script[src=\"' + src + '\"][async]');\n\n  if (!script) {\n    script = document.createElement('script');\n    script.setAttribute('src', src);\n\n    if (key === MODULE) {\n      script.setAttribute('type', MODULE);\n    } else if (key === NOMODULE) {\n      script.setAttribute(NOMODULE, '');\n    }\n\n    script.async = true;\n  }\n\n  return new Promise((resolve, reject) => {\n    script.onreadystatechange = script.onload = e => {\n      script.__dynamicImportLoaded = true;\n      resolve(e);\n    };\n\n    script.onerror = e => {\n      if (script.parentNode) {\n        script.parentNode.removeChild(script);\n      }\n\n      reject(e);\n    };\n\n    if (script.parentNode === null) {\n      document.head.appendChild(script);\n    } else if (script.__dynamicImportLoaded) {\n      resolve();\n    }\n  });\n}\n\nfunction loadBundle(bundle) {\n  if (isString(bundle)) {\n    return loadScript(bundle);\n  } else {\n    return Promise.race(bundleKeys.filter(key => key in bundle).map(key => loadScript(bundle[key], key)));\n  }\n}\n\nfunction fireRouterEvent(type, detail) {\n  return !window.dispatchEvent(new CustomEvent(`vaadin-router-${type}`, {\n    cancelable: type === 'go',\n    detail\n  }));\n}\n\nfunction isObject(o) {\n  // guard against null passing the typeof check\n  return typeof o === 'object' && !!o;\n}\n\nfunction isFunction(f) {\n  return typeof f === 'function';\n}\n\nfunction isString(s) {\n  return typeof s === 'string';\n}\n\nfunction getNotFoundError(context) {\n  const error = new Error(log(`Page not found (${context.pathname})`));\n  error.context = context;\n  error.code = 404;\n  return error;\n}\n\nconst notFoundResult = new class NotFoundResult {}();\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\n\nfunction getAnchorOrigin(anchor) {\n  // IE11: on HTTP and HTTPS the default port is not included into\n  // window.location.origin, so won't include it here either.\n  const port = anchor.port;\n  const protocol = anchor.protocol;\n  const defaultHttp = protocol === 'http:' && port === '80';\n  const defaultHttps = protocol === 'https:' && port === '443';\n  const host = defaultHttp || defaultHttps ? anchor.hostname // does not include the port number (e.g. www.example.org)\n  : anchor.host; // does include the port number (e.g. www.example.org:80)\n\n  return `${protocol}//${host}`;\n} // The list of checks is not complete:\n//  - SVG support is missing\n//  - the 'rel' attribute is not considered\n\n\nfunction vaadinRouterGlobalClickHandler(event) {\n  // ignore the click if the default action is prevented\n  if (event.defaultPrevented) {\n    return;\n  } // ignore the click if not with the primary mouse button\n\n\n  if (event.button !== 0) {\n    return;\n  } // ignore the click if a modifier key is pressed\n\n\n  if (event.shiftKey || event.ctrlKey || event.altKey || event.metaKey) {\n    return;\n  } // find the <a> element that the click is at (or within)\n\n\n  let anchor = event.target;\n  const path = event.composedPath ? event.composedPath() : event.path || []; // FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays\n  // example to check: `for...of` loop here throws the \"Not yet implemented\" error\n\n  for (let i = 0; i < path.length; i++) {\n    const target = path[i];\n\n    if (target.nodeName && target.nodeName.toLowerCase() === 'a') {\n      anchor = target;\n      break;\n    }\n  }\n\n  while (anchor && anchor.nodeName.toLowerCase() !== 'a') {\n    anchor = anchor.parentNode;\n  } // ignore the click if not at an <a> element\n\n\n  if (!anchor || anchor.nodeName.toLowerCase() !== 'a') {\n    return;\n  } // ignore the click if the <a> element has a non-default target\n\n\n  if (anchor.target && anchor.target.toLowerCase() !== '_self') {\n    return;\n  } // ignore the click if the <a> element has the 'download' attribute\n\n\n  if (anchor.hasAttribute('download')) {\n    return;\n  } // ignore the click if the <a> element has the 'router-ignore' attribute\n\n\n  if (anchor.hasAttribute('router-ignore')) {\n    return;\n  } // ignore the click if the target URL is a fragment on the current page\n\n\n  if (anchor.pathname === window.location.pathname && anchor.hash !== '') {\n    return;\n  } // ignore the click if the target is external to the app\n  // In IE11 HTMLAnchorElement does not have the `origin` property\n\n\n  const origin = anchor.origin || getAnchorOrigin(anchor);\n\n  if (origin !== window.location.origin) {\n    return;\n  } // if none of the above, convert the click into a navigation event\n\n\n  const {\n    pathname,\n    search,\n    hash\n  } = anchor;\n\n  if (fireRouterEvent('go', {\n    pathname,\n    search,\n    hash\n  })) {\n    event.preventDefault(); // for a click event, the scroll is reset to the top position.\n\n    if (event && event.type === 'click') {\n      window.scrollTo(0, 0);\n    }\n  }\n}\n/**\n * A navigation trigger for Vaadin Router that translated clicks on `<a>` links\n * into Vaadin Router navigation events.\n *\n * Only regular clicks on in-app links are translated (primary mouse button, no\n * modifier keys, the target href is within the app's URL space).\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\n\n\nconst CLICK = {\n  activate() {\n    window.document.addEventListener('click', vaadinRouterGlobalClickHandler);\n  },\n\n  inactivate() {\n    window.document.removeEventListener('click', vaadinRouterGlobalClickHandler);\n  }\n\n}; // PopStateEvent constructor shim\n\nconst isIE = /Trident/.test(navigator.userAgent);\n/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */\n\nif (isIE && !isFunction(window.PopStateEvent)) {\n  window.PopStateEvent = function (inType, params) {\n    params = params || {};\n    var e = document.createEvent('Event');\n    e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));\n    e.state = params.state || null;\n    return e;\n  };\n\n  window.PopStateEvent.prototype = window.Event.prototype;\n}\n\nfunction vaadinRouterGlobalPopstateHandler(event) {\n  if (event.state === 'vaadin-router-ignore') {\n    return;\n  }\n\n  const {\n    pathname,\n    search,\n    hash\n  } = window.location;\n  fireRouterEvent('go', {\n    pathname,\n    search,\n    hash\n  });\n}\n/**\n * A navigation trigger for Vaadin Router that translates popstate events into\n * Vaadin Router navigation events.\n *\n * @memberOf Router.NavigationTrigger\n * @type {NavigationTrigger}\n */\n\n\nconst POPSTATE = {\n  activate() {\n    window.addEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  },\n\n  inactivate() {\n    window.removeEventListener('popstate', vaadinRouterGlobalPopstateHandler);\n  }\n\n};\n/**\n * Expose `pathToRegexp`.\n */\n\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n/**\n * Default configs.\n */\n\nvar DEFAULT_DELIMITER = '/';\nvar DEFAULT_DELIMITERS = './';\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n// \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n'(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || DEFAULT_DELIMITER;\n  var delimiters = options && options.delimiters || DEFAULT_DELIMITERS;\n  var pathEscaped = false;\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      pathEscaped = true;\n      continue;\n    }\n\n    var prev = '';\n    var next = str[index];\n    var name = res[2];\n    var capture = res[3];\n    var group = res[4];\n    var modifier = res[5];\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1;\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k];\n        path = path.slice(0, k);\n      }\n    } // Push the current path onto the tokens.\n\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n      pathEscaped = false;\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = prev || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Push any remaining characters.\n\n\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index));\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (data, options) {\n    var path = '';\n    var encode = options && options.encode || encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var segment;\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue;\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token);\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\n        }\n\n        path += token.prefix + segment;\n        continue;\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix;\n        continue;\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'));\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1');\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options && options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path; // Use a negative lookahead to match only capturing groups.\n\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      });\n    }\n  }\n\n  return path;\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options));\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  options = options || {};\n  var strict = options.strict;\n  var start = options.start !== false;\n  var end = options.end !== false;\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER);\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS;\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|');\n  var route = start ? '^' : '';\n  var isEndDelimited = tokens.length === 0; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1;\n    } else {\n      var capture = token.repeat ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*' : token.pattern;\n      if (keys) keys.push(token);\n\n      if (token.optional) {\n        if (token.partial) {\n          route += escapeString(token.prefix) + '(' + capture + ')?';\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?';\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')';\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?';\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')';\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')';\n  }\n\n  return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys);\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path, keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path, keys, options);\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {\n  hasOwnProperty\n} = Object.prototype;\nconst cache = new Map(); // see https://github.com/pillarjs/path-to-regexp/issues/148\n\ncache.set('|false', {\n  keys: [],\n  pattern: /(?:)/\n});\n\nfunction decodeParam(val) {\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPath(routepath, path, exact, parentKeys, parentParams) {\n  exact = !!exact;\n  const cacheKey = `${routepath}|${exact}`;\n  let regexp = cache.get(cacheKey);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = {\n      keys,\n      pattern: pathToRegexp_1(routepath, keys, {\n        end: exact,\n        strict: routepath === ''\n      })\n    };\n    cache.set(cacheKey, regexp);\n  }\n\n  const m = regexp.pattern.exec(path);\n\n  if (!m) {\n    return null;\n  }\n\n  const params = Object.assign({}, parentParams);\n\n  for (let i = 1; i < m.length; i++) {\n    const key = regexp.keys[i - 1];\n    const prop = key.name;\n    const value = m[i];\n\n    if (value !== undefined || !hasOwnProperty.call(params, prop)) {\n      if (key.repeat) {\n        params[prop] = value ? value.split(key.delimiter).map(decodeParam) : [];\n      } else {\n        params[prop] = value ? decodeParam(value) : value;\n      }\n    }\n  }\n\n  return {\n    path: m[0],\n    keys: (parentKeys || []).concat(regexp.keys),\n    params\n  };\n}\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Traverses the routes tree and matches its nodes to the given pathname from\n * the root down to the leaves. Each match consumes a part of the pathname and\n * the matching process continues for as long as there is a matching child\n * route for the remaining part of the pathname.\n *\n * The returned value is a lazily evaluated iterator.\n *\n * The leading \"/\" in a route path matters only for the root of the routes\n * tree (or if all parent routes are \"\"). In all other cases a leading \"/\" in\n * a child route path has no significance.\n *\n * The trailing \"/\" in a _route path_ matters only for the leaves of the\n * routes tree. A leaf route with a trailing \"/\" matches only a pathname that\n * also has a trailing \"/\".\n *\n * The trailing \"/\" in a route path does not affect matching of child routes\n * in any way.\n *\n * The trailing \"/\" in a _pathname_ generally does not matter (except for\n * the case of leaf nodes described above).\n *\n * The \"\" and \"/\" routes have special treatment:\n *  1. as a single route\n *     the \"\" and \"/\" routes match only the \"\" and \"/\" pathnames respectively\n *  2. as a parent in the routes tree\n *     the \"\" route matches any pathname without consuming any part of it\n *     the \"/\" route matches any absolute pathname consuming its leading \"/\"\n *  3. as a leaf in the routes tree\n *     the \"\" and \"/\" routes match only if the entire pathname is consumed by\n *         the parent routes chain. In this case \"\" and \"/\" are equivalent.\n *  4. several directly nested \"\" or \"/\" routes\n *     - directly nested \"\" or \"/\" routes are 'squashed' (i.e. nesting two\n *       \"/\" routes does not require a double \"/\" in the pathname to match)\n *     - if there are only \"\" in the parent routes chain, no part of the\n *       pathname is consumed, and the leading \"/\" in the child routes' paths\n *       remains significant\n *\n * Side effect:\n *   - the routes tree { path: '' } matches only the '' pathname\n *   - the routes tree { path: '', children: [ { path: '' } ] } matches any\n *     pathname (for the tree root)\n *\n * Prefix matching can be enabled also by `children: true`.\n */\n\n\nfunction matchRoute(route, pathname, ignoreLeadingSlash, parentKeys, parentParams) {\n  let match;\n  let childMatches;\n  let childIndex = 0;\n  let routepath = route.path || '';\n\n  if (routepath.charAt(0) === '/') {\n    if (ignoreLeadingSlash) {\n      routepath = routepath.substr(1);\n    }\n\n    ignoreLeadingSlash = true;\n  }\n\n  return {\n    next(routeToSkip) {\n      if (route === routeToSkip) {\n        return {\n          done: true\n        };\n      }\n\n      const children = route.__children = route.__children || route.children;\n\n      if (!match) {\n        match = matchPath(routepath, pathname, !children, parentKeys, parentParams);\n\n        if (match) {\n          return {\n            done: false,\n            value: {\n              route,\n              keys: match.keys,\n              params: match.params,\n              path: match.path\n            }\n          };\n        }\n      }\n\n      if (match && children) {\n        while (childIndex < children.length) {\n          if (!childMatches) {\n            const childRoute = children[childIndex];\n            childRoute.parent = route;\n            let matchedLength = match.path.length;\n\n            if (matchedLength > 0 && pathname.charAt(matchedLength) === '/') {\n              matchedLength += 1;\n            }\n\n            childMatches = matchRoute(childRoute, pathname.substr(matchedLength), ignoreLeadingSlash, match.keys, match.params);\n          }\n\n          const childMatch = childMatches.next(routeToSkip);\n\n          if (!childMatch.done) {\n            return {\n              done: false,\n              value: childMatch.value\n            };\n          }\n\n          childMatches = null;\n          childIndex++;\n        }\n      }\n\n      return {\n        done: true\n      };\n    }\n\n  };\n}\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n\nfunction resolveRoute(context) {\n  if (isFunction(context.route.action)) {\n    return context.route.action(context);\n  }\n\n  return undefined;\n}\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n\nfunction isChildRoute(parentRoute, childRoute) {\n  let route = childRoute;\n\n  while (route) {\n    route = route.parent;\n\n    if (route === parentRoute) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction generateErrorMessage(currentContext) {\n  let errorMessage = `Path '${currentContext.pathname}' is not properly resolved due to an error.`;\n  const routePath = (currentContext.route || {}).path;\n\n  if (routePath) {\n    errorMessage += ` Resolution had failed on route: '${routePath}'`;\n  }\n\n  return errorMessage;\n}\n\nfunction updateChainForRoute(context, match) {\n  const {\n    route,\n    path\n  } = match;\n\n  if (route && !route.__synthetic) {\n    const item = {\n      path,\n      route\n    };\n\n    if (!context.chain) {\n      context.chain = [];\n    } else {\n      // Discard old items\n      if (route.parent) {\n        let i = context.chain.length;\n\n        while (i-- && context.chain[i].route && context.chain[i].route !== route.parent) {\n          context.chain.pop();\n        }\n      }\n    }\n\n    context.chain.push(item);\n  }\n}\n/**\n */\n\n\nclass Resolver {\n  constructor(routes, options = {}) {\n    if (Object(routes) !== routes) {\n      throw new TypeError('Invalid routes');\n    }\n\n    this.baseUrl = options.baseUrl || '';\n    this.errorHandler = options.errorHandler;\n    this.resolveRoute = options.resolveRoute || resolveRoute;\n    this.context = Object.assign({\n      resolver: this\n    }, options.context);\n    this.root = Array.isArray(routes) ? {\n      path: '',\n      __children: routes,\n      parent: null,\n      __synthetic: true\n    } : routes;\n    this.root.parent = null;\n  }\n  /**\n   * Returns the current list of routes (as a shallow copy). Adding / removing\n   * routes to / from the returned array does not affect the routing config,\n   * but modifying the route objects does.\n   *\n   * @return {!Array<!Router.Route>}\n   */\n\n\n  getRoutes() {\n    return [...this.root.__children];\n  }\n  /**\n   * Sets the routing config (replacing the existing one).\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   */\n\n\n  setRoutes(routes) {\n    ensureRoutes(routes);\n    const newRoutes = [...toArray(routes)];\n    this.root.__children = newRoutes;\n  }\n  /**\n   * Appends one or several routes to the routing config and returns the\n   * effective routing config after the operation.\n   *\n   * @param {!Array<!Router.Route>|!Router.Route} routes a single route or an array of those\n   *    (the array is shallow copied)\n   * @return {!Array<!Router.Route>}\n   * @protected\n   */\n\n\n  addRoutes(routes) {\n    ensureRoutes(routes);\n\n    this.root.__children.push(...toArray(routes));\n\n    return this.getRoutes();\n  }\n  /**\n   * Removes all existing routes from the routing config.\n   */\n\n\n  removeRoutes() {\n    this.setRoutes([]);\n  }\n  /**\n   * Asynchronously resolves the given pathname, i.e. finds all routes matching\n   * the pathname and tries resolving them one after another in the order they\n   * are listed in the routes config until the first non-null result.\n   *\n   * Returns a promise that is fulfilled with the return value of an object that consists of the first\n   * route handler result that returns something other than `null` or `undefined` and context used to get this result.\n   *\n   * If no route handlers return a non-null result, or if no route matches the\n   * given pathname the returned promise is rejected with a 'page not found'\n   * `Error`.\n   *\n   * @param {!string|!{pathname: !string}} pathnameOrContext the pathname to\n   *    resolve or a context object with a `pathname` property and other\n   *    properties to pass to the route resolver functions.\n   * @return {!Promise<any>}\n   */\n\n\n  resolve(pathnameOrContext) {\n    const context = Object.assign({}, this.context, isString(pathnameOrContext) ? {\n      pathname: pathnameOrContext\n    } : pathnameOrContext);\n    const match = matchRoute(this.root, this.__normalizePathname(context.pathname), this.baseUrl);\n    const resolve = this.resolveRoute;\n    let matches = null;\n    let nextMatches = null;\n    let currentContext = context;\n\n    function next(resume, parent = matches.value.route, prevResult) {\n      const routeToSkip = prevResult === null && matches.value.route;\n      matches = nextMatches || match.next(routeToSkip);\n      nextMatches = null;\n\n      if (!resume) {\n        if (matches.done || !isChildRoute(parent, matches.value.route)) {\n          nextMatches = matches;\n          return Promise.resolve(notFoundResult);\n        }\n      }\n\n      if (matches.done) {\n        return Promise.reject(getNotFoundError(context));\n      }\n\n      currentContext = Object.assign(currentContext ? {\n        chain: currentContext.chain ? currentContext.chain.slice(0) : []\n      } : {}, context, matches.value);\n      updateChainForRoute(currentContext, matches.value);\n      return Promise.resolve(resolve(currentContext)).then(resolution => {\n        if (resolution !== null && resolution !== undefined && resolution !== notFoundResult) {\n          currentContext.result = resolution.result || resolution;\n          return currentContext;\n        }\n\n        return next(resume, parent, resolution);\n      });\n    }\n\n    context.next = next;\n    return Promise.resolve().then(() => next(true, this.root)).catch(error => {\n      const errorMessage = generateErrorMessage(currentContext);\n\n      if (!error) {\n        error = new Error(errorMessage);\n      } else {\n        console.warn(errorMessage);\n      }\n\n      error.context = error.context || currentContext; // DOMException has its own code which is read-only\n\n      if (!(error instanceof DOMException)) {\n        error.code = error.code || 500;\n      }\n\n      if (this.errorHandler) {\n        currentContext.result = this.errorHandler(error);\n        return currentContext;\n      }\n\n      throw error;\n    });\n  }\n  /**\n   * URL constructor polyfill hook. Creates and returns an URL instance.\n   */\n\n\n  static __createUrl(url, base) {\n    return new URL(url, base);\n  }\n  /**\n   * If the baseUrl property is set, transforms the baseUrl and returns the full\n   * actual `base` string for using in the `new URL(path, base);` and for\n   * prepernding the paths with. The returned base ends with a trailing slash.\n   *\n   * Otherwise, returns empty string.\n   */\n\n\n  get __effectiveBaseUrl() {\n    return this.baseUrl ? this.constructor.__createUrl(this.baseUrl, document.baseURI || document.URL).href.replace(/[^\\/]*$/, '') : '';\n  }\n  /**\n   * If the baseUrl is set, matches the pathname with the router’s baseUrl,\n   * and returns the local pathname with the baseUrl stripped out.\n   *\n   * If the pathname does not match the baseUrl, returns undefined.\n   *\n   * If the `baseUrl` is not set, returns the unmodified pathname argument.\n   */\n\n\n  __normalizePathname(pathname) {\n    if (!this.baseUrl) {\n      // No base URL, no need to transform the pathname.\n      return pathname;\n    }\n\n    const base = this.__effectiveBaseUrl;\n\n    const normalizedUrl = this.constructor.__createUrl(pathname, base).href;\n\n    if (normalizedUrl.slice(0, base.length) === base) {\n      return normalizedUrl.slice(base.length);\n    }\n  }\n\n}\n\nResolver.pathToRegexp = pathToRegexp_1;\n/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright (c) 2015-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nconst {\n  pathToRegexp: pathToRegexp$1\n} = Resolver;\nconst cache$1 = new Map();\n\nfunction cacheRoutes(routesByName, route, routes) {\n  const name = route.name || route.component;\n\n  if (name) {\n    if (routesByName.has(name)) {\n      routesByName.get(name).push(route);\n    } else {\n      routesByName.set(name, [route]);\n    }\n  }\n\n  if (Array.isArray(routes)) {\n    for (let i = 0; i < routes.length; i++) {\n      const childRoute = routes[i];\n      childRoute.parent = route;\n      cacheRoutes(routesByName, childRoute, childRoute.__children || childRoute.children);\n    }\n  }\n}\n\nfunction getRouteByName(routesByName, routeName) {\n  const routes = routesByName.get(routeName);\n\n  if (routes && routes.length > 1) {\n    throw new Error(`Duplicate route with name \"${routeName}\".` + ` Try seting unique 'name' route properties.`);\n  }\n\n  return routes && routes[0];\n}\n\nfunction getRoutePath(route) {\n  let path = route.path;\n  path = Array.isArray(path) ? path[0] : path;\n  return path !== undefined ? path : '';\n}\n\nfunction generateUrls(router, options = {}) {\n  if (!(router instanceof Resolver)) {\n    throw new TypeError('An instance of Resolver is expected');\n  }\n\n  const routesByName = new Map();\n  return (routeName, params) => {\n    let route = getRouteByName(routesByName, routeName);\n\n    if (!route) {\n      routesByName.clear(); // clear cache\n\n      cacheRoutes(routesByName, router.root, router.root.__children);\n      route = getRouteByName(routesByName, routeName);\n\n      if (!route) {\n        throw new Error(`Route \"${routeName}\" not found`);\n      }\n    }\n\n    let regexp = cache$1.get(route.fullPath);\n\n    if (!regexp) {\n      let fullPath = getRoutePath(route);\n      let rt = route.parent;\n\n      while (rt) {\n        const path = getRoutePath(rt);\n\n        if (path) {\n          fullPath = path.replace(/\\/$/, '') + '/' + fullPath.replace(/^\\//, '');\n        }\n\n        rt = rt.parent;\n      }\n\n      const tokens = pathToRegexp$1.parse(fullPath);\n      const toPath = pathToRegexp$1.tokensToFunction(tokens);\n      const keys = Object.create(null);\n\n      for (let i = 0; i < tokens.length; i++) {\n        if (!isString(tokens[i])) {\n          keys[tokens[i].name] = true;\n        }\n      }\n\n      regexp = {\n        toPath,\n        keys\n      };\n      cache$1.set(fullPath, regexp);\n      route.fullPath = fullPath;\n    }\n\n    let url = regexp.toPath(params, options) || '/';\n\n    if (options.stringifyQueryParams && params) {\n      const queryParams = {};\n      const keys = Object.keys(params);\n\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (!regexp.keys[key]) {\n          queryParams[key] = params[key];\n        }\n      }\n\n      const query = options.stringifyQueryParams(queryParams);\n\n      if (query) {\n        url += query.charAt(0) === '?' ? query : `?${query}`;\n      }\n    }\n\n    return url;\n  };\n}\n/**\n * @typedef NavigationTrigger\n * @type {object}\n * @property {function()} activate\n * @property {function()} inactivate\n */\n\n/** @type {Array<NavigationTrigger>} */\n\n\nlet triggers = [];\n\nfunction setNavigationTriggers(newTriggers) {\n  triggers.forEach(trigger => trigger.inactivate());\n  newTriggers.forEach(trigger => trigger.activate());\n  triggers = newTriggers;\n}\n\nconst willAnimate = elem => {\n  const name = getComputedStyle(elem).getPropertyValue('animation-name');\n  return name && name !== 'none';\n};\n\nconst waitForAnimation = (elem, cb) => {\n  const listener = () => {\n    elem.removeEventListener('animationend', listener);\n    cb();\n  };\n\n  elem.addEventListener('animationend', listener);\n};\n\nfunction animate(elem, className) {\n  elem.classList.add(className);\n  return new Promise(resolve => {\n    if (willAnimate(elem)) {\n      const rect = elem.getBoundingClientRect();\n      const size = `height: ${rect.bottom - rect.top}px; width: ${rect.right - rect.left}px`;\n      elem.setAttribute('style', `position: absolute; ${size}`);\n      waitForAnimation(elem, () => {\n        elem.classList.remove(className);\n        elem.removeAttribute('style');\n        resolve();\n      });\n    } else {\n      elem.classList.remove(className);\n      resolve();\n    }\n  });\n}\n\nconst MAX_REDIRECT_COUNT = 256;\n\nfunction isResultNotEmpty(result) {\n  return result !== null && result !== undefined;\n}\n\nfunction copyContextWithoutNext(context) {\n  const copy = Object.assign({}, context);\n  delete copy.next;\n  return copy;\n}\n\nfunction createLocation({\n  pathname = '',\n  search = '',\n  hash = '',\n  chain = [],\n  params = {},\n  redirectFrom,\n  resolver\n}, route) {\n  const routes = chain.map(item => item.route);\n  return {\n    baseUrl: resolver && resolver.baseUrl || '',\n    pathname,\n    search,\n    hash,\n    routes,\n    route: route || routes.length && routes[routes.length - 1] || null,\n    params,\n    redirectFrom,\n    getUrl: (userParams = {}) => getPathnameForRouter(Router.pathToRegexp.compile(getMatchedPath(routes))(Object.assign({}, params, userParams)), resolver)\n  };\n}\n\nfunction createRedirect(context, pathname) {\n  const params = Object.assign({}, context.params);\n  return {\n    redirect: {\n      pathname,\n      from: context.pathname,\n      params\n    }\n  };\n}\n\nfunction renderElement(context, element) {\n  element.location = createLocation(context);\n  const index = context.chain.map(item => item.route).indexOf(context.route);\n  context.chain[index].element = element;\n  return element;\n}\n\nfunction runCallbackIfPossible(callback, args, thisArg) {\n  if (isFunction(callback)) {\n    return callback.apply(thisArg, args);\n  }\n}\n\nfunction amend(amendmentFunction, args, element) {\n  return amendmentResult => {\n    if (amendmentResult && (amendmentResult.cancel || amendmentResult.redirect)) {\n      return amendmentResult;\n    }\n\n    if (element) {\n      return runCallbackIfPossible(element[amendmentFunction], args, element);\n    }\n  };\n}\n\nfunction processNewChildren(newChildren, route) {\n  if (!Array.isArray(newChildren) && !isObject(newChildren)) {\n    throw new Error(log(`Incorrect \"children\" value for the route ${route.path}: expected array or object, but got ${newChildren}`));\n  }\n\n  route.__children = [];\n  const childRoutes = toArray(newChildren);\n\n  for (let i = 0; i < childRoutes.length; i++) {\n    ensureRoute(childRoutes[i]);\n\n    route.__children.push(childRoutes[i]);\n  }\n}\n\nfunction removeDomNodes(nodes) {\n  if (nodes && nodes.length) {\n    const parent = nodes[0].parentNode;\n\n    for (let i = 0; i < nodes.length; i++) {\n      parent.removeChild(nodes[i]);\n    }\n  }\n}\n\nfunction getPathnameForRouter(pathname, router) {\n  const base = router.__effectiveBaseUrl;\n  return base ? router.constructor.__createUrl(pathname.replace(/^\\//, ''), base).pathname : pathname;\n}\n\nfunction getMatchedPath(chain) {\n  return chain.map(item => item.path).reduce((a, b) => {\n    if (b.length) {\n      return a.replace(/\\/$/, '') + '/' + b.replace(/^\\//, '');\n    }\n\n    return a;\n  }, '');\n}\n/**\n * A simple client-side router for single-page applications. It uses\n * express-style middleware and has a first-class support for Web Components and\n * lazy-loading. Works great in Polymer and non-Polymer apps.\n *\n * Use `new Router(outlet, options)` to create a new Router instance.\n *\n * * The `outlet` parameter is a reference to the DOM node to render\n *   the content into.\n *\n * * The `options` parameter is an optional object with options. The following\n *   keys are supported:\n *   * `baseUrl` — the initial value for [\n *     the `baseUrl` property\n *   ](#/classes/Router#property-baseUrl)\n *\n * The Router instance is automatically subscribed to navigation events\n * on `window`.\n *\n * See [Live Examples](#/classes/Router/demos/demo/index.html) for the detailed usage demo and code snippets.\n *\n * See also detailed API docs for the following methods, for the advanced usage:\n *\n * * [setOutlet](#/classes/Router#method-setOutlet) – should be used to configure the outlet.\n * * [setTriggers](#/classes/Router#method-setTriggers) – should be used to configure the navigation events.\n * * [setRoutes](#/classes/Router#method-setRoutes) – should be used to configure the routes.\n *\n * Only `setRoutes` has to be called manually, others are automatically invoked when creating a new instance.\n *\n * @extends Resolver\n * @demo demo/index.html\n * @summary JavaScript class that renders different DOM content depending on\n *    a given path. It can re-render when triggered or automatically on\n *    'popstate' and / or 'click' events.\n */\n\n\nclass Router extends Resolver {\n  /**\n   * Creates a new Router instance with a given outlet, and\n   * automatically subscribes it to navigation events on the `window`.\n   * Using a constructor argument or a setter for outlet is equivalent:\n   *\n   * ```\n   * const router = new Router();\n   * router.setOutlet(outlet);\n   * ```\n   * @param {?Node=} outlet\n   * @param {?RouterOptions=} options\n   */\n  constructor(outlet, options) {\n    const baseElement = document.head.querySelector('base');\n    const baseHref = baseElement && baseElement.getAttribute('href');\n    super([], Object.assign({\n      // Default options\n      baseUrl: baseHref && Resolver.__createUrl(baseHref, document.URL).pathname.replace(/[^\\/]*$/, '')\n    }, options));\n\n    this.resolveRoute = context => this.__resolveRoute(context);\n\n    const triggers = Router.NavigationTrigger;\n    Router.setTriggers.apply(Router, Object.keys(triggers).map(key => triggers[key]));\n    /**\n     * The base URL for all routes in the router instance. By default,\n     * if the base element exists in the `<head>`, vaadin-router\n     * takes the `<base href>` attribute value, resolves against current `document.URL`\n     * and gets the `pathname` from the result.\n     *\n     * @public\n     * @type {string}\n     */\n\n    this.baseUrl;\n    /**\n     * A promise that is settled after the current render cycle completes. If\n     * there is no render cycle in progress the promise is immediately settled\n     * with the last render cycle result.\n     *\n     * @public\n     * @type {!Promise<!RouterLocation>}\n     */\n\n    this.ready;\n    this.ready = Promise.resolve(outlet);\n    /**\n     * Contains read-only information about the current router location:\n     * pathname, active routes, parameters. See the\n     * [Location type declaration](#/classes/RouterLocation)\n     * for more details.\n     *\n     * @public\n     * @type {!RouterLocation}\n     */\n\n    this.location;\n    this.location = createLocation({\n      resolver: this\n    });\n    this.__lastStartedRenderId = 0;\n    this.__navigationEventHandler = this.__onNavigationEvent.bind(this);\n    this.setOutlet(outlet);\n    this.subscribe(); // Using WeakMap instead of WeakSet because WeakSet is not supported by IE11\n\n    this.__createdByRouter = new WeakMap();\n    this.__addedByRouter = new WeakMap();\n  }\n\n  __resolveRoute(context) {\n    const route = context.route;\n    let callbacks = Promise.resolve();\n\n    if (isFunction(route.children)) {\n      callbacks = callbacks.then(() => route.children(copyContextWithoutNext(context))).then(children => {\n        // The route.children() callback might have re-written the\n        // route.children property instead of returning a value\n        if (!isResultNotEmpty(children) && !isFunction(route.children)) {\n          children = route.children;\n        }\n\n        processNewChildren(children, route);\n      });\n    }\n\n    const commands = {\n      redirect: path => createRedirect(context, path),\n      component: component => {\n        const element = document.createElement(component);\n\n        this.__createdByRouter.set(element, true);\n\n        return element;\n      }\n    };\n    return callbacks.then(() => {\n      if (this.__isLatestRender(context)) {\n        return runCallbackIfPossible(route.action, [context, commands], route);\n      }\n    }).then(result => {\n      if (isResultNotEmpty(result)) {\n        // Actions like `() => import('my-view.js')` are not expected to\n        // end the resolution, despite the result is not empty. Checking\n        // the result with a whitelist of values that end the resolution.\n        if (result instanceof HTMLElement || result.redirect || result === notFoundResult) {\n          return result;\n        }\n      }\n\n      if (isString(route.redirect)) {\n        return commands.redirect(route.redirect);\n      }\n\n      if (route.bundle) {\n        return loadBundle(route.bundle).then(() => {}, () => {\n          throw new Error(log(`Bundle not found: ${route.bundle}. Check if the file name is correct`));\n        });\n      }\n    }).then(result => {\n      if (isResultNotEmpty(result)) {\n        return result;\n      }\n\n      if (isString(route.component)) {\n        return commands.component(route.component);\n      }\n    });\n  }\n  /**\n   * Sets the router outlet (the DOM node where the content for the current\n   * route is inserted). Any content pre-existing in the router outlet is\n   * removed at the end of each render pass.\n   *\n   * NOTE: this method is automatically invoked first time when creating a new Router instance.\n   *\n   * @param {?Node} outlet the DOM node where the content for the current route\n   *     is inserted.\n   */\n\n\n  setOutlet(outlet) {\n    if (outlet) {\n      this.__ensureOutlet(outlet);\n    }\n\n    this.__outlet = outlet;\n  }\n  /**\n   * Returns the current router outlet. The initial value is `undefined`.\n   *\n   * @return {?Node} the current router outlet (or `undefined`)\n   */\n\n\n  getOutlet() {\n    return this.__outlet;\n  }\n  /**\n   * Sets the routing config (replacing the existing one) and triggers a\n   * navigation event so that the router outlet is refreshed according to the\n   * current `window.location` and the new routing config.\n   *\n   * Each route object may have the following properties, listed here in the processing order:\n   * * `path` – the route path (relative to the parent route if any) in the\n   * [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   *\n   * * `children` – an array of nested routes or a function that provides this\n   * array at the render time. The function can be synchronous or asynchronous:\n   * in the latter case the render is delayed until the returned promise is\n   * resolved. The `children` function is executed every time when this route is\n   * being rendered. This allows for dynamic route structures (e.g. backend-defined),\n   * but it might have a performance impact as well. In order to avoid calling\n   * the function on subsequent renders, you can override the `children` property\n   * of the route object and save the calculated array there\n   * (via `context.route.children = [ route1, route2, ...];`).\n   * Parent routes are fully resolved before resolving the children. Children\n   * 'path' values are relative to the parent ones.\n   *\n   * * `action` – the action that is executed before the route is resolved.\n   * The value for this property should be a function, accepting `context`\n   * and `commands` parameters described below. If present, this function is\n   * always invoked first, disregarding of the other properties' presence.\n   * The action can return a result directly or within a `Promise`, which\n   * resolves to the result. If the action result is an `HTMLElement` instance,\n   * a `commands.component(name)` result, a `commands.redirect(path)` result,\n   * or a `context.next()` result, the current route resolution is finished,\n   * and other route config properties are ignored.\n   * See also **Route Actions** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `redirect` – other route's path to redirect to. Passes all route parameters to the redirect target.\n   * The target route should also be defined.\n   * See also **Redirects** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `bundle` – string containing the path to `.js` or `.mjs` bundle to load before resolving the route,\n   * or the object with \"module\" and \"nomodule\" keys referring to different bundles.\n   * Each bundle is only loaded once. If \"module\" and \"nomodule\" are set, only one bundle is loaded,\n   * depending on whether the browser supports ES modules or not.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * Any error, e.g. 404 while loading bundle will cause route resolution to throw.\n   * See also **Code Splitting** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * * `component` – the tag name of the Web Component to resolve the route to.\n   * The property is ignored when either an `action` returns the result or `redirect` property is present.\n   * If route contains the `component` property (or an action that return a component)\n   * and its child route also contains the `component` property, child route's component\n   * will be rendered as a light dom child of a parent component.\n   *\n   * * `name` – the string name of the route to use in the\n   * [`router.urlForName(name, params)`](#/classes/Router#method-urlForName)\n   * navigation helper method.\n   *\n   * For any route function (`action`, `children`) defined, the corresponding `route` object is available inside the callback\n   * through the `this` reference. If you need to access it, make sure you define the callback as a non-arrow function\n   * because arrow functions do not have their own `this` reference.\n   *\n   * `context` object that is passed to `action` function holds the following properties:\n   * * `context.pathname` – string with the pathname being resolved\n   *\n   * * `context.search` – search query string\n   *\n   * * `context.hash` – hash string\n   *\n   * * `context.params` – object with route parameters\n   *\n   * * `context.route` – object that holds the route that is currently being rendered.\n   *\n   * * `context.next()` – function for asynchronously getting the next route\n   * contents from the resolution chain (if any)\n   *\n   * `commands` object that is passed to `action` function has\n   * the following methods:\n   *\n   * * `commands.redirect(path)` – function that creates a redirect data\n   * for the path specified.\n   *\n   * * `commands.component(component)` – function that creates a new HTMLElement\n   * with current context. Note: the component created by this function is reused if visiting the same path twice in row.\n   *\n   *\n   * @param {!Array<!Route>|!Route} routes a single route or an array of those\n   * @param {?boolean} skipRender configure the router but skip rendering the\n   *     route corresponding to the current `window.location` values\n   *\n   * @return {!Promise<!Node>}\n   */\n\n\n  setRoutes(routes, skipRender = false) {\n    this.__previousContext = undefined;\n    this.__urlForName = undefined;\n    super.setRoutes(routes);\n\n    if (!skipRender) {\n      this.__onNavigationEvent();\n    }\n\n    return this.ready;\n  }\n  /**\n   * Asynchronously resolves the given pathname and renders the resolved route\n   * component into the router outlet. If no router outlet is set at the time of\n   * calling this method, or at the time when the route resolution is completed,\n   * a `TypeError` is thrown.\n   *\n   * Returns a promise that is fulfilled with the router outlet DOM Node after\n   * the route component is created and inserted into the router outlet, or\n   * rejected if no route matches the given path.\n   *\n   * If another render pass is started before the previous one is completed, the\n   * result of the previous render pass is ignored.\n   *\n   * @param {!string|!{pathname: !string, search: ?string, hash: ?string}} pathnameOrContext\n   *    the pathname to render or a context object with a `pathname` property,\n   *    optional `search` and `hash` properties, and other properties\n   *    to pass to the resolver.\n   * @param {boolean=} shouldUpdateHistory\n   *    update browser history with the rendered location\n   * @return {!Promise<!Node>}\n   */\n\n\n  render(pathnameOrContext, shouldUpdateHistory) {\n    const renderId = ++this.__lastStartedRenderId;\n    const context = Object.assign({\n      search: '',\n      hash: ''\n    }, isString(pathnameOrContext) ? {\n      pathname: pathnameOrContext\n    } : pathnameOrContext, {\n      __renderId: renderId\n    }); // Find the first route that resolves to a non-empty result\n\n    this.ready = this.resolve(context) // Process the result of this.resolve() and handle all special commands:\n    // (redirect / prevent / component). If the result is a 'component',\n    // then go deeper and build the entire chain of nested components matching\n    // the pathname. Also call all 'on before' callbacks along the way.\n    .then(context => this.__fullyResolveChain(context)).then(context => {\n      if (this.__isLatestRender(context)) {\n        const previousContext = this.__previousContext; // Check if the render was prevented and make an early return in that case\n\n        if (context === previousContext) {\n          // Replace the history with the previous context\n          // to make sure the URL stays the same.\n          this.__updateBrowserHistory(previousContext, true);\n\n          return this.location;\n        }\n\n        this.location = createLocation(context);\n\n        if (shouldUpdateHistory) {\n          // Replace only if first render redirects, so that we don’t leave\n          // the redirecting record in the history\n          this.__updateBrowserHistory(context, renderId === 1);\n        }\n\n        fireRouterEvent('location-changed', {\n          router: this,\n          location: this.location\n        }); // Skip detaching/re-attaching there are no render changes\n\n        if (context.__skipAttach) {\n          this.__copyUnchangedElements(context, previousContext);\n\n          this.__previousContext = context;\n          return this.location;\n        }\n\n        this.__addAppearingContent(context, previousContext);\n\n        const animationDone = this.__animateIfNeeded(context);\n\n        this.__runOnAfterEnterCallbacks(context);\n\n        this.__runOnAfterLeaveCallbacks(context, previousContext);\n\n        return animationDone.then(() => {\n          if (this.__isLatestRender(context)) {\n            // If there is another render pass started after this one,\n            // the 'disappearing content' would be removed when the other\n            // render pass calls `this.__addAppearingContent()`\n            this.__removeDisappearingContent();\n\n            this.__previousContext = context;\n            return this.location;\n          }\n        });\n      }\n    }).catch(error => {\n      if (renderId === this.__lastStartedRenderId) {\n        if (shouldUpdateHistory) {\n          this.__updateBrowserHistory(context);\n        }\n\n        removeDomNodes(this.__outlet && this.__outlet.children);\n        this.location = createLocation(Object.assign(context, {\n          resolver: this\n        }));\n        fireRouterEvent('error', Object.assign({\n          router: this,\n          error\n        }, context));\n        throw error;\n      }\n    });\n    return this.ready;\n  } // `topOfTheChainContextBeforeRedirects` is a context coming from Resolver.resolve().\n  // It would contain a 'redirect' route or the first 'component' route that\n  // matched the pathname. There might be more child 'component' routes to be\n  // resolved and added into the chain. This method would find and add them.\n  // `contextBeforeRedirects` is the context containing such a child component\n  // route. It's only necessary when this method is called recursively (otherwise\n  // it's the same as the 'top of the chain' context).\n  //\n  // Apart from building the chain of child components, this method would also\n  // handle 'redirect' routes, call 'onBefore' callbacks and handle 'prevent'\n  // and 'redirect' callback results.\n\n\n  __fullyResolveChain(topOfTheChainContextBeforeRedirects, contextBeforeRedirects = topOfTheChainContextBeforeRedirects) {\n    return this.__findComponentContextAfterAllRedirects(contextBeforeRedirects) // `contextAfterRedirects` is always a context with an `HTMLElement` result\n    // In other cases the promise gets rejected and .then() is not called\n    .then(contextAfterRedirects => {\n      const redirectsHappened = contextAfterRedirects !== contextBeforeRedirects;\n      const topOfTheChainContextAfterRedirects = redirectsHappened ? contextAfterRedirects : topOfTheChainContextBeforeRedirects;\n      const matchedPath = getPathnameForRouter(getMatchedPath(contextAfterRedirects.chain), contextAfterRedirects.resolver);\n      const isFound = matchedPath === contextAfterRedirects.pathname; // Recursive method to try matching more child and sibling routes\n\n      const findNextContextIfAny = (context, parent = context.route, prevResult) => {\n        return context.next(undefined, parent, prevResult).then(nextContext => {\n          if (nextContext === null || nextContext === notFoundResult) {\n            // Next context is not found in children, ...\n            if (isFound) {\n              // ...but original context is already fully matching - use it\n              return context;\n            } else if (parent.parent !== null) {\n              // ...and there is no full match yet - step up to check siblings\n              return findNextContextIfAny(context, parent.parent, nextContext);\n            } else {\n              return nextContext;\n            }\n          }\n\n          return nextContext;\n        });\n      };\n\n      return findNextContextIfAny(contextAfterRedirects).then(nextContext => {\n        if (nextContext === null || nextContext === notFoundResult) {\n          throw getNotFoundError(topOfTheChainContextAfterRedirects);\n        }\n\n        return nextContext && nextContext !== notFoundResult && nextContext !== contextAfterRedirects ? this.__fullyResolveChain(topOfTheChainContextAfterRedirects, nextContext) : this.__amendWithOnBeforeCallbacks(contextAfterRedirects);\n      });\n    });\n  }\n\n  __findComponentContextAfterAllRedirects(context) {\n    const result = context.result;\n\n    if (result instanceof HTMLElement) {\n      renderElement(context, result);\n      return Promise.resolve(context);\n    } else if (result.redirect) {\n      return this.__redirect(result.redirect, context.__redirectCount, context.__renderId).then(context => this.__findComponentContextAfterAllRedirects(context));\n    } else if (result instanceof Error) {\n      return Promise.reject(result);\n    } else {\n      return Promise.reject(new Error(log(`Invalid route resolution result for path \"${context.pathname}\". ` + `Expected redirect object or HTML element, but got: \"${logValue(result)}\". ` + `Double check the action return value for the route.`)));\n    }\n  }\n\n  __amendWithOnBeforeCallbacks(contextWithFullChain) {\n    return this.__runOnBeforeCallbacks(contextWithFullChain).then(amendedContext => {\n      if (amendedContext === this.__previousContext || amendedContext === contextWithFullChain) {\n        return amendedContext;\n      }\n\n      return this.__fullyResolveChain(amendedContext);\n    });\n  }\n\n  __runOnBeforeCallbacks(newContext) {\n    const previousContext = this.__previousContext || {};\n    const previousChain = previousContext.chain || [];\n    const newChain = newContext.chain;\n    let callbacks = Promise.resolve();\n\n    const prevent = () => ({\n      cancel: true\n    });\n\n    const redirect = pathname => createRedirect(newContext, pathname);\n\n    newContext.__divergedChainIndex = 0;\n    newContext.__skipAttach = false;\n\n    if (previousChain.length) {\n      for (let i = 0; i < Math.min(previousChain.length, newChain.length); i = ++newContext.__divergedChainIndex) {\n        if (previousChain[i].route !== newChain[i].route || previousChain[i].path !== newChain[i].path && previousChain[i].element !== newChain[i].element || !this.__isReusableElement(previousChain[i].element, newChain[i].element)) {\n          break;\n        }\n      } // Skip re-attaching and notifications if element and chain do not change\n\n\n      newContext.__skipAttach = // Same route chain\n      newChain.length === previousChain.length && newContext.__divergedChainIndex == newChain.length && // Same element\n      this.__isReusableElement(newContext.result, previousContext.result);\n\n      if (newContext.__skipAttach) {\n        // execute onBeforeLeave for changed segment element when skipping attach\n        for (let i = newChain.length - 1; i >= 0; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {\n            prevent\n          }, previousChain[i]);\n        } // execute onBeforeEnter for changed segment element when skipping attach\n\n\n        for (let i = 0; i < newChain.length; i++) {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {\n            prevent,\n            redirect\n          }, newChain[i]);\n          previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n        }\n      } else {\n        // execute onBeforeLeave when NOT skipping attach\n        for (let i = previousChain.length - 1; i >= newContext.__divergedChainIndex; i--) {\n          callbacks = this.__runOnBeforeLeaveCallbacks(callbacks, newContext, {\n            prevent\n          }, previousChain[i]);\n        }\n      }\n    } // execute onBeforeEnter when NOT skipping attach\n\n\n    if (!newContext.__skipAttach) {\n      for (let i = 0; i < newChain.length; i++) {\n        if (i < newContext.__divergedChainIndex) {\n          if (i < previousChain.length && previousChain[i].element) {\n            previousChain[i].element.location = createLocation(newContext, previousChain[i].route);\n          }\n        } else {\n          callbacks = this.__runOnBeforeEnterCallbacks(callbacks, newContext, {\n            prevent,\n            redirect\n          }, newChain[i]);\n\n          if (newChain[i].element) {\n            newChain[i].element.location = createLocation(newContext, newChain[i].route);\n          }\n        }\n      }\n    }\n\n    return callbacks.then(amendmentResult => {\n      if (amendmentResult) {\n        if (amendmentResult.cancel) {\n          this.__previousContext.__renderId = newContext.__renderId;\n          return this.__previousContext;\n        }\n\n        if (amendmentResult.redirect) {\n          return this.__redirect(amendmentResult.redirect, newContext.__redirectCount, newContext.__renderId);\n        }\n      }\n\n      return newContext;\n    });\n  }\n\n  __runOnBeforeLeaveCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const afterLeaveFunction = amend('onBeforeLeave', [location, commands, this], chainElement.element);\n        return afterLeaveFunction(result);\n      }\n    }).then(result => {\n      if (!(result || {}).redirect) {\n        return result;\n      }\n    });\n  }\n\n  __runOnBeforeEnterCallbacks(callbacks, newContext, commands, chainElement) {\n    const location = createLocation(newContext, chainElement.route);\n    return callbacks.then(result => {\n      if (this.__isLatestRender(newContext)) {\n        const beforeEnterFunction = amend('onBeforeEnter', [location, commands, this], chainElement.element);\n        return beforeEnterFunction(result);\n      }\n    });\n  }\n\n  __isReusableElement(element, otherElement) {\n    if (element && otherElement) {\n      return this.__createdByRouter.get(element) && this.__createdByRouter.get(otherElement) ? element.localName === otherElement.localName : element === otherElement;\n    }\n\n    return false;\n  }\n\n  __isLatestRender(context) {\n    return context.__renderId === this.__lastStartedRenderId;\n  }\n\n  __redirect(redirectData, counter, renderId) {\n    if (counter > MAX_REDIRECT_COUNT) {\n      throw new Error(log(`Too many redirects when rendering ${redirectData.from}`));\n    }\n\n    return this.resolve({\n      pathname: this.urlForPath(redirectData.pathname, redirectData.params),\n      redirectFrom: redirectData.from,\n      __redirectCount: (counter || 0) + 1,\n      __renderId: renderId\n    });\n  }\n\n  __ensureOutlet(outlet = this.__outlet) {\n    if (!(outlet instanceof Node)) {\n      throw new TypeError(log(`Expected router outlet to be a valid DOM Node (but got ${outlet})`));\n    }\n  }\n\n  __updateBrowserHistory({\n    pathname,\n    search = '',\n    hash = ''\n  }, replace) {\n    if (window.location.pathname !== pathname || window.location.search !== search || window.location.hash !== hash) {\n      const changeState = replace ? 'replaceState' : 'pushState';\n      window.history[changeState](null, document.title, pathname + search + hash);\n      window.dispatchEvent(new PopStateEvent('popstate', {\n        state: 'vaadin-router-ignore'\n      }));\n    }\n  }\n\n  __copyUnchangedElements(context, previousContext) {\n    // Find the deepest common parent between the last and the new component\n    // chains. Update references for the unchanged elements in the new chain\n    let deepestCommonParent = this.__outlet;\n\n    for (let i = 0; i < context.__divergedChainIndex; i++) {\n      const unchangedElement = previousContext && previousContext.chain[i].element;\n\n      if (unchangedElement) {\n        if (unchangedElement.parentNode === deepestCommonParent) {\n          context.chain[i].element = unchangedElement;\n          deepestCommonParent = unchangedElement;\n        } else {\n          break;\n        }\n      }\n    }\n\n    return deepestCommonParent;\n  }\n\n  __addAppearingContent(context, previousContext) {\n    this.__ensureOutlet(); // If the previous 'entering' animation has not completed yet,\n    // stop it and remove that content from the DOM before adding new one.\n\n\n    this.__removeAppearingContent(); // Copy reusable elements from the previousContext to current\n\n\n    const deepestCommonParent = this.__copyUnchangedElements(context, previousContext); // Keep two lists of DOM elements:\n    //  - those that should be removed once the transition animation is over\n    //  - and those that should remain\n\n\n    this.__appearingContent = [];\n    this.__disappearingContent = Array.from(deepestCommonParent.children).filter( // Only remove layout content that was added by router\n    e => this.__addedByRouter.get(e) && // Do not remove the result element to avoid flickering\n    e !== context.result); // Add new elements (starting after the deepest common parent) to the DOM.\n    // That way only the components that are actually different between the two\n    // locations are added to the DOM (and those that are common remain in the\n    // DOM without first removing and then adding them again).\n\n    let parentElement = deepestCommonParent;\n\n    for (let i = context.__divergedChainIndex; i < context.chain.length; i++) {\n      const elementToAdd = context.chain[i].element;\n\n      if (elementToAdd) {\n        parentElement.appendChild(elementToAdd);\n\n        this.__addedByRouter.set(elementToAdd, true);\n\n        if (parentElement === deepestCommonParent) {\n          this.__appearingContent.push(elementToAdd);\n        }\n\n        parentElement = elementToAdd;\n      }\n    }\n  }\n\n  __removeDisappearingContent() {\n    if (this.__disappearingContent) {\n      removeDomNodes(this.__disappearingContent);\n    }\n\n    this.__disappearingContent = null;\n    this.__appearingContent = null;\n  }\n\n  __removeAppearingContent() {\n    if (this.__disappearingContent && this.__appearingContent) {\n      removeDomNodes(this.__appearingContent);\n      this.__disappearingContent = null;\n      this.__appearingContent = null;\n    }\n  }\n\n  __runOnAfterLeaveCallbacks(currentContext, targetContext) {\n    if (!targetContext) {\n      return;\n    } // REVERSE iteration: from Z to A\n\n\n    for (let i = targetContext.chain.length - 1; i >= currentContext.__divergedChainIndex; i--) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n\n      const currentComponent = targetContext.chain[i].element;\n\n      if (!currentComponent) {\n        continue;\n      }\n\n      try {\n        const location = createLocation(currentContext);\n        runCallbackIfPossible(currentComponent.onAfterLeave, [location, {}, targetContext.resolver], currentComponent);\n      } finally {\n        if (this.__disappearingContent.indexOf(currentComponent) > -1) {\n          removeDomNodes(currentComponent.children);\n        }\n      }\n    }\n  }\n\n  __runOnAfterEnterCallbacks(currentContext) {\n    // forward iteration: from A to Z\n    for (let i = currentContext.__divergedChainIndex; i < currentContext.chain.length; i++) {\n      if (!this.__isLatestRender(currentContext)) {\n        break;\n      }\n\n      const currentComponent = currentContext.chain[i].element || {};\n      const location = createLocation(currentContext, currentContext.chain[i].route);\n      runCallbackIfPossible(currentComponent.onAfterEnter, [location, {}, currentContext.resolver], currentComponent);\n    }\n  }\n\n  __animateIfNeeded(context) {\n    const from = (this.__disappearingContent || [])[0];\n    const to = (this.__appearingContent || [])[0];\n    const promises = [];\n    const chain = context.chain;\n    let config;\n\n    for (let i = chain.length; i > 0; i--) {\n      if (chain[i - 1].route.animate) {\n        config = chain[i - 1].route.animate;\n        break;\n      }\n    }\n\n    if (from && to && config) {\n      const leave = isObject(config) && config.leave || 'leaving';\n      const enter = isObject(config) && config.enter || 'entering';\n      promises.push(animate(from, leave));\n      promises.push(animate(to, enter));\n    }\n\n    return Promise.all(promises).then(() => context);\n  }\n  /**\n   * Subscribes this instance to navigation events on the `window`.\n   *\n   * NOTE: beware of resource leaks. For as long as a router instance is\n   * subscribed to navigation events, it won't be garbage collected.\n   */\n\n\n  subscribe() {\n    window.addEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n  /**\n   * Removes the subscription to navigation events created in the `subscribe()`\n   * method.\n   */\n\n\n  unsubscribe() {\n    window.removeEventListener('vaadin-router-go', this.__navigationEventHandler);\n  }\n\n  __onNavigationEvent(event) {\n    const {\n      pathname,\n      search,\n      hash\n    } = event ? event.detail : window.location;\n\n    if (isString(this.__normalizePathname(pathname))) {\n      if (event && event.preventDefault) {\n        event.preventDefault();\n      }\n\n      this.render({\n        pathname,\n        search,\n        hash\n      }, true);\n    }\n  }\n  /**\n   * Configures what triggers Router navigation events:\n   *  - `POPSTATE`: popstate events on the current `window`\n   *  - `CLICK`: click events on `<a>` links leading to the current page\n   *\n   * This method is invoked with the pre-configured values when creating a new Router instance.\n   * By default, both `POPSTATE` and `CLICK` are enabled. This setup is expected to cover most of the use cases.\n   *\n   * See the `router-config.js` for the default navigation triggers config. Based on it, you can\n   * create the own one and only import the triggers you need, instead of pulling in all the code,\n   * e.g. if you want to handle `click` differently.\n   *\n   * See also **Navigation Triggers** section in [Live Examples](#/classes/Router/demos/demo/index.html).\n   *\n   * @param {...NavigationTrigger} triggers\n   */\n\n\n  static setTriggers(...triggers) {\n    setNavigationTriggers(triggers);\n  }\n  /**\n   * Generates a URL for the route with the given name, optionally performing\n   * substitution of parameters.\n   *\n   * The route is searched in all the Router instances subscribed to\n   * navigation events.\n   *\n   * **Note:** For child route names, only array children are considered.\n   * It is not possible to generate URLs using a name for routes set with\n   * a children function.\n   *\n   * @function urlForName\n   * @param {!string} name the route name or the route’s `component` name.\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n\n\n  urlForName(name, params) {\n    if (!this.__urlForName) {\n      this.__urlForName = generateUrls(this);\n    }\n\n    return getPathnameForRouter(this.__urlForName(name, params), this);\n  }\n  /**\n   * Generates a URL for the given route path, optionally performing\n   * substitution of parameters.\n   *\n   * @param {!string} path string route path declared in [express.js syntax](https://expressjs.com/en/guide/routing.html#route-paths\").\n   * @param {Params=} params Optional object with route path parameters.\n   * Named parameters are passed by name (`params[name] = value`), unnamed\n   * parameters are passed by index (`params[index] = value`).\n   *\n   * @return {string}\n   */\n\n\n  urlForPath(path, params) {\n    return getPathnameForRouter(Router.pathToRegexp.compile(path)(params), this);\n  }\n  /**\n   * Triggers navigation to a new path. Returns a boolean without waiting until\n   * the navigation is complete. Returns `true` if at least one `Router`\n   * has handled the navigation (was subscribed and had `baseUrl` matching\n   * the `path` argument), otherwise returns `false`.\n   *\n   * @param {!string|!{pathname: !string, search: (string|undefined), hash: (string|undefined)}} path\n   *   a new in-app path string, or an URL-like object with `pathname`\n   *   string property, and optional `search` and `hash` string properties.\n   * @return {boolean}\n   */\n\n\n  static go(path) {\n    const {\n      pathname,\n      search,\n      hash\n    } = isString(path) ? this.__createUrl(path, 'http://a') // some base to omit origin\n    : path;\n    return fireRouterEvent('go', {\n      pathname,\n      search,\n      hash\n    });\n  }\n\n}\n\nconst DEV_MODE_CODE_REGEXP = /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return [\"localhost\", \"127.0.0.1\"].indexOf(window.location.hostname) >= 0;\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients).map(key => FlowClients[key]).filter(client => client.productionMode);\n\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e);\n    }\n  }\n\n  return callback(args);\n} // A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\n\n\nwindow['Vaadin'] = window['Vaadin'] || {};\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\n\nconst runIfDevelopmentMode = function (callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n  'use strict';\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n  } : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n  };\n  var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n   return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n  }();\n  var getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n  };\n  var StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n     this.now = new Date().getTime();\n    this.logger = logger;\n  }\n   createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n           jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n           return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      // NOTE: In case you edit the code here, YOU MUST UPDATE any statistics reporting code in Flow.\n      // Check all locations calling the method getEntries() in\n      // https://github.com/vaadin/flow/blob/master/flow-server/src/main/java/com/vaadin/flow/internal/UsageStatistics.java#L106\n      // Currently it is only used by BootstrapHandler.\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n       types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n       var previousStats = JSON.stringify(storedStats);\n       this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n       var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n       var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n  }();\n  var StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n     this.key = key;\n  }\n   createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n       return empty;\n    }\n  }]);\n  return StatisticsStorage;\n  }();\n  var StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n     this.url = url;\n    this.logger = logger;\n  }\n   createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n       if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n       var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n  }();\n  var StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n     this.id = id;\n  }\n   createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n  }();\n  var UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n     this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n     this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n   createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n       if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return true;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n       if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n       if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n       this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n       // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.1.0';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n  }();\n  try {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n  } catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n  }\n  }());\n   vaadin-dev-mode:end **/\n}\n\nconst usageStatistics = function () {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n\nwindow.Vaadin = window.Vaadin || {};\nwindow.Vaadin.registrations = window.Vaadin.registrations || [];\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/router',\n  version: '1.7.4'\n});\nusageStatistics();\nRouter.NavigationTrigger = {\n  POPSTATE,\n  CLICK\n};\n\nexport { Router };\n", "import { Router } from '../_snowpack/pkg/@vaadin/router.js';\nexport const routes = [{\n  path: '/',\n  name: 'home',\n  component: 'page-home',\n  action: async () => {\n    await import(\"./pages/page-home.js\");\n  }\n}, {\n  path: '/about',\n  name: 'about',\n  component: 'page-about',\n  action: async () => {\n    await import(\"./pages/page-about.js\");\n  }\n}, {\n  path: '/blog',\n  name: 'blog-list',\n  component: 'page-blog-list',\n  action: async () => {\n    await import(\"./pages/page-blog-list.js\");\n  }\n}, {\n  path: '/blog/:slug',\n  component: 'page-blog',\n  action: async () => {\n    await import(\"./pages/page-blog.js\");\n  }\n}, {\n  // this route must be last\n  path: '(.*)',\n  name: 'not-found',\n  component: 'page-not-found',\n  action: async () => {\n    await import(\"./pages/page-not-found.js\");\n  }\n}];\nexport const router = new Router();\nrouter.setRoutes([...routes]);\nexport const attachRouter = outlet => router.setOutlet(outlet); // prettier-ignore\n\nexport const urlForName = (name, params) => router.urlForName(name, params);"],
  "mappings": "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",
  "names": []
}
